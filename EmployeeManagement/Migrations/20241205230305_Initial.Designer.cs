// <auto-generated />
using System;
using EmployeeManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241205230305_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagement.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Carpenter",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Driver",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Electrician",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Gardener",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Plumber",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 6,
                            Name = "Welder",
                            ParentId = 0
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Title = "Master Carpenter",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "super@admin.com",
                            FirstName = "Super",
                            LastName = "Admin",
                            PasswordHash = new byte[] { 139, 74, 108, 254, 207, 2, 5, 100, 168, 51, 172, 15, 153, 178, 133, 222, 105, 10, 47, 135, 254, 41, 57, 14, 250, 85, 49, 124, 175, 144, 144, 188, 123, 29, 53, 15, 198, 178, 5, 214, 218, 117, 212, 50, 210, 67, 21, 111, 106, 104, 176, 188, 41, 213, 152, 188, 209, 207, 79, 179, 70, 173, 237, 12 },
                            PasswordSalt = new byte[] { 139, 116, 223, 234, 10, 14, 221, 86, 14, 95, 251, 242, 22, 178, 87, 218, 110, 120, 251, 160, 149, 113, 99, 162, 21, 96, 4, 254, 39, 166, 219, 25, 165, 99, 101, 240, 198, 230, 198, 53, 180, 69, 86, 46, 154, 243, 206, 58, 187, 83, 222, 148, 170, 90, 251, 177, 123, 124, 125, 95, 236, 72, 65, 169, 52, 107, 242, 159, 36, 67, 26, 90, 234, 153, 202, 145, 166, 134, 139, 213, 97, 178, 121, 204, 128, 25, 5, 46, 21, 45, 5, 196, 124, 72, 15, 125, 123, 191, 124, 98, 11, 41, 146, 117, 21, 192, 17, 238, 92, 71, 116, 188, 37, 8, 100, 254, 191, 194, 230, 205, 2, 155, 191, 94, 172, 244, 161, 28 },
                            Phone = "1234567",
                            Role = "S"
                        },
                        new
                        {
                            Id = 2,
                            Email = "john@doe.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PasswordHash = new byte[] { 139, 74, 108, 254, 207, 2, 5, 100, 168, 51, 172, 15, 153, 178, 133, 222, 105, 10, 47, 135, 254, 41, 57, 14, 250, 85, 49, 124, 175, 144, 144, 188, 123, 29, 53, 15, 198, 178, 5, 214, 218, 117, 212, 50, 210, 67, 21, 111, 106, 104, 176, 188, 41, 213, 152, 188, 209, 207, 79, 179, 70, 173, 237, 12 },
                            PasswordSalt = new byte[] { 139, 116, 223, 234, 10, 14, 221, 86, 14, 95, 251, 242, 22, 178, 87, 218, 110, 120, 251, 160, 149, 113, 99, 162, 21, 96, 4, 254, 39, 166, 219, 25, 165, 99, 101, 240, 198, 230, 198, 53, 180, 69, 86, 46, 154, 243, 206, 58, 187, 83, 222, 148, 170, 90, 251, 177, 123, 124, 125, 95, 236, 72, 65, 169, 52, 107, 242, 159, 36, 67, 26, 90, 234, 153, 202, 145, 166, 134, 139, 213, 97, 178, 121, 204, 128, 25, 5, 46, 21, 45, 5, 196, 124, 72, 15, 125, 123, 191, 124, 98, 11, 41, 146, 117, 21, 192, 17, 238, 92, 71, 116, 188, 37, 8, 100, 254, 191, 194, 230, 205, 2, 155, 191, 94, 172, 244, 161, 28 },
                            Phone = "1234567",
                            Role = "W"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.Employee", b =>
                {
                    b.HasOne("EmployeeManagement.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("EmployeeManagement.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Category");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
