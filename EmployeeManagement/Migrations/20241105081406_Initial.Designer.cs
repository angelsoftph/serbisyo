// <auto-generated />
using System;
using EmployeeManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241105081406_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagement.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Carpenter",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Driver",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Electrician",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Gardener",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Plumber",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 6,
                            Name = "Welder",
                            ParentId = 0
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Title = "Master Carpenter",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "super@admin.com",
                            FirstName = "Super",
                            LastName = "Admin",
                            PasswordHash = new byte[] { 35, 34, 225, 31, 65, 135, 26, 199, 81, 32, 29, 6, 184, 89, 158, 63, 88, 228, 183, 240, 227, 83, 67, 6, 151, 15, 96, 189, 60, 203, 105, 230, 197, 33, 82, 3, 84, 209, 64, 227, 75, 199, 8, 170, 179, 185, 217, 190, 195, 123, 44, 102, 100, 228, 7, 200, 57, 122, 114, 19, 213, 217, 230, 236 },
                            PasswordSalt = new byte[] { 89, 12, 8, 83, 244, 123, 241, 28, 125, 58, 17, 22, 102, 170, 129, 11, 153, 240, 193, 124, 103, 217, 243, 50, 156, 212, 216, 32, 23, 79, 90, 9, 158, 21, 82, 23, 32, 216, 92, 127, 234, 134, 181, 189, 196, 246, 92, 157, 104, 219, 120, 165, 0, 51, 87, 54, 65, 113, 214, 237, 33, 55, 36, 124, 195, 164, 173, 11, 7, 153, 34, 247, 82, 168, 131, 84, 234, 212, 94, 91, 81, 119, 254, 56, 140, 242, 243, 25, 65, 180, 194, 249, 97, 168, 45, 176, 203, 135, 167, 249, 60, 226, 213, 242, 51, 105, 177, 246, 51, 64, 182, 116, 75, 224, 194, 78, 91, 233, 89, 205, 174, 120, 194, 201, 49, 149, 46, 122 },
                            Phone = "1234567",
                            Role = "S"
                        },
                        new
                        {
                            Id = 2,
                            Email = "john@doe.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PasswordHash = new byte[] { 35, 34, 225, 31, 65, 135, 26, 199, 81, 32, 29, 6, 184, 89, 158, 63, 88, 228, 183, 240, 227, 83, 67, 6, 151, 15, 96, 189, 60, 203, 105, 230, 197, 33, 82, 3, 84, 209, 64, 227, 75, 199, 8, 170, 179, 185, 217, 190, 195, 123, 44, 102, 100, 228, 7, 200, 57, 122, 114, 19, 213, 217, 230, 236 },
                            PasswordSalt = new byte[] { 89, 12, 8, 83, 244, 123, 241, 28, 125, 58, 17, 22, 102, 170, 129, 11, 153, 240, 193, 124, 103, 217, 243, 50, 156, 212, 216, 32, 23, 79, 90, 9, 158, 21, 82, 23, 32, 216, 92, 127, 234, 134, 181, 189, 196, 246, 92, 157, 104, 219, 120, 165, 0, 51, 87, 54, 65, 113, 214, 237, 33, 55, 36, 124, 195, 164, 173, 11, 7, 153, 34, 247, 82, 168, 131, 84, 234, 212, 94, 91, 81, 119, 254, 56, 140, 242, 243, 25, 65, 180, 194, 249, 97, 168, 45, 176, 203, 135, 167, 249, 60, 226, 213, 242, 51, 105, 177, 246, 51, 64, 182, 116, 75, 224, 194, 78, 91, 233, 89, 205, 174, 120, 194, 201, 49, 149, 46, 122 },
                            Phone = "1234567",
                            Role = "W"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.Employee", b =>
                {
                    b.HasOne("EmployeeManagement.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("EmployeeManagement.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Category");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
